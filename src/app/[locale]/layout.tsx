import type { Metadata } from 'next';
import { hasLocale, NextIntlClientProvider } from 'next-intl';
import { routing } from '@/i18n/routing';
import { setRequestLocale } from 'next-intl/server';
import { notFound } from 'next/navigation';
import { Inter, Roboto } from 'next/font/google';
import { Header, Footer } from '@/shared/components';
import { HeroProvider } from '@/shared/utils';

const inter = Inter({
  subsets: ['latin'],
  display: 'swap',
  weight: 'variable',
  variable: '--font-inter',
});

const roboto = Roboto({
  subsets: ['latin'],
  display: 'swap',
  weight: 'variable',
  variable: '--font-roboto',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({ locale }));
}

export default async function LocaleLayout({ children, params }: LayoutProps<'/[locale]'>) {
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  setRequestLocale(locale);

  return (
    <html lang={locale} className={`${inter.variable} ${roboto.variable} antialiased`}>
      <body className='font-content'>
        <NextIntlClientProvider>
          <HeroProvider>
            <main className='isolate'>
              <Header />
              {children}
              <Footer />
            </main>
          </HeroProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
